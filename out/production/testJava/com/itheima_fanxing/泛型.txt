泛型类 public class ClassName<T> {}
泛型方法  public<T> methodName(T t) {}
泛型接口

类型通配符 <?>
1.为了表示各种泛型List的父类，可以使用类型通配符
<?>

List<?> 表示元素类型未知的List，它的元素可以匹配任意的类型
这种带通配符的List，仅表示它是各种泛型List的父类，并不能把元素添加其中

如果说我们不希望List<?> 是任何泛型List的父类，只希望它代表某一类泛型List的父类，可以使用
类型通配符的上限
List<?extends 类型>
List<?extends Number> 它表示的类型是，Number或者其子类型

除了可以指定类型通配符的上限，还可以指定类型通配符的下限
<?super 类型>
<?super Number> 它表示Number或者其父类型



泛型好处：把运行时期的事情，提前到了编译期间；使用的时候，不用强制类型转换


