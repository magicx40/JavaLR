package com.itheima_duotai;

public class Duotai {
    /**
     * 多态：
     *      同一个对象，在不同时刻表现出来的不同形态
     *
     *      举例：猫
     *      我们可以说猫是猫： 猫 cat = new 猫（）
     *      我们也可以说猫是动物： 动物 animal = new 猫（）
     *
     *      这里猫在不同的时刻表现出来了不同的形态，这就是多态
     *
     *
     *
     *
     * 多态的前提和体现：
     *      1。有继承/实现关系
     *      2。有方法重写
     *      3。有父类引用指向子类对象
     *
     *
     * 多态中成员的访问特点：
     * 成员变量， 编译看左边，执行看左边
     * 成员方法： 编译看左边，执行看右边
     *
     *
     * 为什么成员变量和成员方法的访问不一样呢？
     * 因为成员方法有重写，而成员变量没有
     */
}
